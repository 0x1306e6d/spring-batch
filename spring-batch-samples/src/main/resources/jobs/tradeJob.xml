<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       		http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       		http://www.springframework.org/schema/batch
       		http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
       		http://www.springframework.org/schema/aop
 			http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<batch:job id="tradeJob">
		<batch:step name="step1" next="step2"/>
		<batch:step name="step2" next="step3"/>
		<batch:step name="step3"/>
	</batch:job>

	<bean id="step1" parent="simpleStep">
		<property name="transactionAttribute" value="PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED"/>
		<property name="streams" ref="fileItemReader" />
		<property name="itemReader" ref="fileItemReader" />
		<property name="itemProcessor">
			<bean class="org.springframework.batch.item.validator.ValidatingItemProcessor">
				<constructor-arg ref="tradeValidator" />
			</bean>
		</property>
		<property name="itemWriter">
			<bean class="org.springframework.batch.sample.domain.trade.internal.TradeWriter"
				  p:dao-ref="tradeDao" />
		</property>
	</bean>
	
	<bean id="step2" parent="simpleStep">
		<property name="itemReader" ref="tradeSqlItemReader" />
		<property name="itemWriter">
			<bean class="org.springframework.batch.sample.domain.trade.internal.CustomerUpdateWriter"
				  p:dao-ref="customerDao" />
		</property>
	</bean>
	
	<bean id="step3" parent="simpleStep">
		<property name="itemReader" ref="customerSqlItemReader" />
		<property name="itemWriter">
			<bean class="org.springframework.batch.sample.domain.trade.internal.CustomerCreditUpdateWriter"
				  p:dao-ref="customerReportItemWriter" />
		</property>
	</bean>

	<bean id="tradeSqlItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource" />
		<property name="sql" value="SELECT id, quantity, price, customer from TRADE" />
		<property name="mapper">
			<bean class="org.springframework.batch.sample.domain.trade.internal.TradeRowMapper" />
		</property>
	</bean>

	<bean id="customerSqlItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource" />
		<property name="sql" value="SELECT id, name, credit FROM customer " />
		<property name="mapper">
			<bean class="org.springframework.batch.sample.domain.trade.internal.CustomerCreditRowMapper" />
		</property>
	</bean>

	<bean id="tradeDao" class="org.springframework.batch.sample.domain.trade.internal.JdbcTradeDao"
		  p:dataSource-ref="dataSource">
		<property name="incrementer">
			<bean parent="incrementerParent">
				<property name="incrementerName" value="TRADE_SEQ" />
			</bean>
		</property>
	</bean>

	<bean id="customerDao" class="org.springframework.batch.sample.domain.trade.internal.JdbcCustomerDebitDao"
		  p:dataSource-ref="dataSource" />

	<bean id="customerReportItemWriter" class="org.springframework.batch.sample.domain.trade.internal.FlatFileCustomerCreditDao">
		<property name="itemWriter">
			<bean class="org.springframework.batch.item.file.FlatFileItemWriter">
				<property name="resource" value="target/test-outputs/20070122.testStream.CustomerReportStep.TEMP.txt"/>
				<property name="lineAggregator">
					<bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="fileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:data/tradeJob/input/20070122.teststream.ImportTradeDataStep.txt" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="ISIN, Quantity, Price, Customer" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.sample.domain.trade.internal.TradeFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="tradeValidator" class="org.springframework.batch.item.validator.SpringValidator">
		<property name="validator">
			<bean class="org.springmodules.validation.valang.ValangValidator">
				<property name="valang">
					<value>
						<![CDATA[{ isin : length(?) < 13 : 'ISIN too long' : 'isin_length' : 12}]]>
					</value>
				</property>
			</bean>
		</property>
	</bean>

</beans>